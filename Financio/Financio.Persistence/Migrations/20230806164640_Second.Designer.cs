// <auto-generated />
using System;
using Financio.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Financio.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230806164640_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccountAccountReference", b =>
                {
                    b.Property<int>("CounterAccountReferencesId")
                        .HasColumnType("int");

                    b.Property<string>("CounterAccountsNumber")
                        .HasColumnType("nchar(4)");

                    b.HasKey("CounterAccountReferencesId", "CounterAccountsNumber");

                    b.HasIndex("CounterAccountsNumber");

                    b.ToTable("AccountAccountReference");
                });

            modelBuilder.Entity("Financio.Core.Entities.Account", b =>
                {
                    b.Property<string>("Number")
                        .HasMaxLength(4)
                        .HasColumnType("nchar(4)")
                        .IsFixedLength();

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Number");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Financio.Core.Entities.AccountReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nchar(4)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber");

                    b.ToTable("References");
                });

            modelBuilder.Entity("AccountAccountReference", b =>
                {
                    b.HasOne("Financio.Core.Entities.AccountReference", null)
                        .WithMany()
                        .HasForeignKey("CounterAccountReferencesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Financio.Core.Entities.Account", null)
                        .WithMany()
                        .HasForeignKey("CounterAccountsNumber")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Financio.Core.Entities.AccountReference", b =>
                {
                    b.HasOne("Financio.Core.Entities.Account", "Account")
                        .WithMany("References")
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Financio.Core.Entities.Account", b =>
                {
                    b.Navigation("References");
                });
#pragma warning restore 612, 618
        }
    }
}
